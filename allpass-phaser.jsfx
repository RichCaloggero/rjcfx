desc:rjc stereo multiband allpass phase shifter

import cookdsp.jsfx-inc


slider1:s_minFreq=100<100,10000>minimum Frequency (Hz)
slider2:s_maxFreq=6000<100,10000>maximum Frequency (Hz)
slider3:s_bandwidth=100.0<100.0,2000.0>Bandwidth (Hz)
slider4:s_feedback=0<0,0.99>Feedback
slider5:s_mix=0<0,0.99>mix
slider6:s_bandcount=0<0,99,1>band count

@init

function freq(base, band, spacing) (
base * spacing^band;
); // freq

function calculate_bandcount (base, max_frequency, spacing)
local (count) (
count = 0;
count = floor(abs(s_maxFreq - s_minFreq) / s_bandwidth);
/*while (freq(base, count, spacing) <= max_frequency) (
count += 1;
); // while
*/
count;
); // calculate_bandcount


/// @start

s_bandcount = calculate_bandcount(s_minFreq, s_maxFreq, s_bandwidth);
slider_automate(s_bandcount);



/*apL.apass(slider1, slider2, slider3);
apR.apass(slider1, slider2, slider3);
*/

@slider

s_bandcount = calculate_bandcount(s_minFreq, s_maxFreq, s_bandwidth);
slider_automate(s_bandcount);


/*apL.apass_set_freq(slider1);
apR.apass_set_freq(slider1);
apL.apass_set_bw(slider2);
apR.apass_set_bw(slider2);
apL.apass_set_feed(slider3);
apR.apass_set_feed(slider3);
*/

@sample


/*filt = apL.apass_do(spl0);
spl0 = (spl0 + filt) * 0.5;  

filt = apR.apass_do(spl1);
spl1 = (spl1 + filt) * 0.5;
*/
